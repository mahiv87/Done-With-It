{"ast":null,"code":"import { arrayOf, number, oneOf, oneOfType, shape, string } from 'prop-types';\nvar numberOrString = oneOfType([number, string]);\nvar TransformPropTypes = {\n  perspective: oneOfType([number, string]),\n  perspectiveOrigin: string,\n  transform: arrayOf(oneOfType([shape({\n    perspective: numberOrString\n  }), shape({\n    rotate: string\n  }), shape({\n    rotateX: string\n  }), shape({\n    rotateY: string\n  }), shape({\n    rotateZ: string\n  }), shape({\n    scale: number\n  }), shape({\n    scaleX: number\n  }), shape({\n    scaleY: number\n  }), shape({\n    scaleZ: number\n  }), shape({\n    scale3d: string\n  }), shape({\n    skewX: string\n  }), shape({\n    skewY: string\n  }), shape({\n    translateX: numberOrString\n  }), shape({\n    translateY: numberOrString\n  }), shape({\n    translateZ: numberOrString\n  }), shape({\n    translate3d: string\n  })])),\n  transformOrigin: string,\n  transformStyle: oneOf(['flat', 'preserve-3d'])\n};\nexport default TransformPropTypes;","map":{"version":3,"names":["arrayOf","number","oneOf","oneOfType","shape","string","numberOrString","TransformPropTypes","perspective","perspectiveOrigin","transform","rotate","rotateX","rotateY","rotateZ","scale","scaleX","scaleY","scaleZ","scale3d","skewX","skewY","translateX","translateY","translateZ","translate3d","transformOrigin","transformStyle"],"sources":["/Users/marcusherrera/Documents/Code/Projects/DoneWithIt/node_modules/react-native-web/dist/modules/TransformPropTypes/index.js"],"sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport { arrayOf, number, oneOf, oneOfType, shape, string } from 'prop-types';\nvar numberOrString = oneOfType([number, string]);\nvar TransformPropTypes = {\n  perspective: oneOfType([number, string]),\n  perspectiveOrigin: string,\n  transform: arrayOf(oneOfType([shape({\n    perspective: numberOrString\n  }), shape({\n    rotate: string\n  }), shape({\n    rotateX: string\n  }), shape({\n    rotateY: string\n  }), shape({\n    rotateZ: string\n  }), shape({\n    scale: number\n  }), shape({\n    scaleX: number\n  }), shape({\n    scaleY: number\n  }), shape({\n    scaleZ: number\n  }), shape({\n    scale3d: string\n  }), shape({\n    skewX: string\n  }), shape({\n    skewY: string\n  }), shape({\n    translateX: numberOrString\n  }), shape({\n    translateY: numberOrString\n  }), shape({\n    translateZ: numberOrString\n  }), shape({\n    translate3d: string\n  })])),\n  transformOrigin: string,\n  transformStyle: oneOf(['flat', 'preserve-3d'])\n};\nexport default TransformPropTypes;"],"mappings":"AASA,SAASA,OAAT,EAAkBC,MAAlB,EAA0BC,KAA1B,EAAiCC,SAAjC,EAA4CC,KAA5C,EAAmDC,MAAnD,QAAiE,YAAjE;AACA,IAAIC,cAAc,GAAGH,SAAS,CAAC,CAACF,MAAD,EAASI,MAAT,CAAD,CAA9B;AACA,IAAIE,kBAAkB,GAAG;EACvBC,WAAW,EAAEL,SAAS,CAAC,CAACF,MAAD,EAASI,MAAT,CAAD,CADC;EAEvBI,iBAAiB,EAAEJ,MAFI;EAGvBK,SAAS,EAAEV,OAAO,CAACG,SAAS,CAAC,CAACC,KAAK,CAAC;IAClCI,WAAW,EAAEF;EADqB,CAAD,CAAN,EAEzBF,KAAK,CAAC;IACRO,MAAM,EAAEN;EADA,CAAD,CAFoB,EAIzBD,KAAK,CAAC;IACRQ,OAAO,EAAEP;EADD,CAAD,CAJoB,EAMzBD,KAAK,CAAC;IACRS,OAAO,EAAER;EADD,CAAD,CANoB,EAQzBD,KAAK,CAAC;IACRU,OAAO,EAAET;EADD,CAAD,CARoB,EAUzBD,KAAK,CAAC;IACRW,KAAK,EAAEd;EADC,CAAD,CAVoB,EAYzBG,KAAK,CAAC;IACRY,MAAM,EAAEf;EADA,CAAD,CAZoB,EAczBG,KAAK,CAAC;IACRa,MAAM,EAAEhB;EADA,CAAD,CAdoB,EAgBzBG,KAAK,CAAC;IACRc,MAAM,EAAEjB;EADA,CAAD,CAhBoB,EAkBzBG,KAAK,CAAC;IACRe,OAAO,EAAEd;EADD,CAAD,CAlBoB,EAoBzBD,KAAK,CAAC;IACRgB,KAAK,EAAEf;EADC,CAAD,CApBoB,EAsBzBD,KAAK,CAAC;IACRiB,KAAK,EAAEhB;EADC,CAAD,CAtBoB,EAwBzBD,KAAK,CAAC;IACRkB,UAAU,EAAEhB;EADJ,CAAD,CAxBoB,EA0BzBF,KAAK,CAAC;IACRmB,UAAU,EAAEjB;EADJ,CAAD,CA1BoB,EA4BzBF,KAAK,CAAC;IACRoB,UAAU,EAAElB;EADJ,CAAD,CA5BoB,EA8BzBF,KAAK,CAAC;IACRqB,WAAW,EAAEpB;EADL,CAAD,CA9BoB,CAAD,CAAV,CAHK;EAoCvBqB,eAAe,EAAErB,MApCM;EAqCvBsB,cAAc,EAAEzB,KAAK,CAAC,CAAC,MAAD,EAAS,aAAT,CAAD;AArCE,CAAzB;AAuCA,eAAeK,kBAAf"},"metadata":{},"sourceType":"module"}