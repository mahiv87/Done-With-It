{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nimport applyLayout from \"../../modules/applyLayout\";\nimport applyNativeMethods from \"../../modules/applyNativeMethods\";\nimport { canUseDOM } from 'fbjs/lib/ExecutionEnvironment';\nimport { Component } from 'react';\nimport ColorPropType from \"../ColorPropType\";\nimport createElement from \"../createElement\";\nimport css from \"../StyleSheet/css\";\nimport findNodeHandle from \"../findNodeHandle\";\nimport StyleSheetPropType from \"../../modules/StyleSheetPropType\";\nimport TextInputStylePropTypes from \"./TextInputStylePropTypes\";\nimport TextInputState from \"../../modules/TextInputState\";\nimport ViewPropTypes from \"../ViewPropTypes\";\nimport { any, bool, func, number, oneOf, shape, string } from 'prop-types';\nvar isAndroid = canUseDOM && /Android/i.test(navigator && navigator.userAgent);\nvar emptyObject = {};\n\nvar normalizeEventHandler = function normalizeEventHandler(handler) {\n  return function (e) {\n    if (handler) {\n      e.nativeEvent.text = e.target.value;\n      return handler(e);\n    }\n  };\n};\n\nvar isSelectionStale = function isSelectionStale(node, selection) {\n  if (node && selection) {\n    var selectionEnd = node.selectionEnd,\n        selectionStart = node.selectionStart;\n    var start = selection.start,\n        end = selection.end;\n    return start !== selectionStart || end !== selectionEnd;\n  }\n\n  return false;\n};\n\nvar setSelection = function setSelection(node, selection) {\n  try {\n    if (isSelectionStale(node, selection)) {\n      var start = selection.start,\n          end = selection.end;\n\n      if (isAndroid) {\n        setTimeout(function () {\n          return node.setSelectionRange(start, end || start);\n        }, 10);\n      } else {\n        node.setSelectionRange(start, end || start);\n      }\n    }\n  } catch (e) {}\n};\n\nvar TextInput = function (_Component) {\n  _inheritsLoose(TextInput, _Component);\n\n  function TextInput() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _Component.call.apply(_Component, [this].concat(args)) || this;\n\n    _this._handleBlur = function (e) {\n      var onBlur = _this.props.onBlur;\n      TextInputState._currentlyFocusedNode = null;\n\n      if (onBlur) {\n        onBlur(e);\n      }\n    };\n\n    _this._handleContentSizeChange = function () {\n      var _this$props = _this.props,\n          onContentSizeChange = _this$props.onContentSizeChange,\n          multiline = _this$props.multiline;\n\n      if (multiline && onContentSizeChange) {\n        var newHeight = _this._node.scrollHeight;\n        var newWidth = _this._node.scrollWidth;\n\n        if (newHeight !== _this._nodeHeight || newWidth !== _this._nodeWidth) {\n          _this._nodeHeight = newHeight;\n          _this._nodeWidth = newWidth;\n          onContentSizeChange({\n            nativeEvent: {\n              contentSize: {\n                height: _this._nodeHeight,\n                width: _this._nodeWidth\n              }\n            }\n          });\n        }\n      }\n    };\n\n    _this._handleChange = function (e) {\n      var _this$props2 = _this.props,\n          onChange = _this$props2.onChange,\n          onChangeText = _this$props2.onChangeText;\n      var text = e.nativeEvent.text;\n\n      _this._handleContentSizeChange();\n\n      if (onChange) {\n        onChange(e);\n      }\n\n      if (onChangeText) {\n        onChangeText(text);\n      }\n\n      _this._handleSelectionChange(e);\n    };\n\n    _this._handleFocus = function (e) {\n      var _this$props3 = _this.props,\n          clearTextOnFocus = _this$props3.clearTextOnFocus,\n          onFocus = _this$props3.onFocus,\n          selectTextOnFocus = _this$props3.selectTextOnFocus;\n      var node = _this._node;\n      TextInputState._currentlyFocusedNode = _this._node;\n\n      if (onFocus) {\n        onFocus(e);\n      }\n\n      if (clearTextOnFocus) {\n        _this.clear();\n      }\n\n      if (selectTextOnFocus) {\n        node && node.select();\n      }\n    };\n\n    _this._handleKeyDown = function (e) {\n      e.stopPropagation();\n\n      if (e.key === 'ArrowLeft' || e.key === 'ArrowUp' || e.key === 'ArrowRight' || e.key === 'ArrowDown' || e.key === 'Backspace' || e.key === 'Escape' || e.key === 'Enter' && e.metaKey || e.key === 'Tab') {\n        _this._handleKeyPress(e);\n      }\n    };\n\n    _this._handleKeyPress = function (e) {\n      var _this$props4 = _this.props,\n          blurOnSubmit = _this$props4.blurOnSubmit,\n          multiline = _this$props4.multiline,\n          onKeyPress = _this$props4.onKeyPress,\n          onSubmitEditing = _this$props4.onSubmitEditing;\n      var blurOnSubmitDefault = !multiline;\n      var shouldBlurOnSubmit = blurOnSubmit == null ? blurOnSubmitDefault : blurOnSubmit;\n\n      if (onKeyPress) {\n        var keyValue = e.key;\n\n        if (keyValue) {\n          e.nativeEvent = {\n            altKey: e.altKey,\n            ctrlKey: e.ctrlKey,\n            key: keyValue,\n            metaKey: e.metaKey,\n            shiftKey: e.shiftKey,\n            target: e.target\n          };\n          onKeyPress(e);\n        }\n      }\n\n      if (!e.isDefaultPrevented() && e.key === 'Enter' && !e.shiftKey) {\n        if ((blurOnSubmit || !multiline) && onSubmitEditing) {\n          e.preventDefault();\n          e.nativeEvent = {\n            target: e.target,\n            text: e.target.value\n          };\n          onSubmitEditing(e);\n        }\n\n        if (shouldBlurOnSubmit) {\n          _this.blur();\n        }\n      }\n    };\n\n    _this._handleSelectionChange = function (e) {\n      var _this$props5 = _this.props,\n          onSelectionChange = _this$props5.onSelectionChange,\n          _this$props5$selectio = _this$props5.selection,\n          selection = _this$props5$selectio === void 0 ? emptyObject : _this$props5$selectio;\n\n      if (onSelectionChange) {\n        try {\n          var node = e.target;\n\n          if (isSelectionStale(node, selection)) {\n            var selectionStart = node.selectionStart,\n                selectionEnd = node.selectionEnd;\n            e.nativeEvent.selection = {\n              start: selectionStart,\n              end: selectionEnd\n            };\n            onSelectionChange(e);\n          }\n        } catch (e) {}\n      }\n    };\n\n    _this._setNode = function (component) {\n      _this._node = findNodeHandle(component);\n\n      if (_this._node) {\n        _this._handleContentSizeChange();\n      }\n    };\n\n    return _this;\n  }\n\n  var _proto = TextInput.prototype;\n\n  _proto.clear = function clear() {\n    this._node.value = '';\n  };\n\n  _proto.isFocused = function isFocused() {\n    return TextInputState.currentlyFocusedField() === this._node;\n  };\n\n  _proto.componentDidMount = function componentDidMount() {\n    setSelection(this._node, this.props.selection);\n\n    if (document.activeElement === this._node) {\n      TextInputState._currentlyFocusedNode = this._node;\n    }\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate() {\n    setSelection(this._node, this.props.selection);\n  };\n\n  _proto.render = function render() {\n    var _this$props6 = this.props,\n        autoComplete = _this$props6.autoComplete,\n        autoCorrect = _this$props6.autoCorrect,\n        editable = _this$props6.editable,\n        keyboardType = _this$props6.keyboardType,\n        multiline = _this$props6.multiline,\n        numberOfLines = _this$props6.numberOfLines,\n        returnKeyType = _this$props6.returnKeyType,\n        secureTextEntry = _this$props6.secureTextEntry,\n        blurOnSubmit = _this$props6.blurOnSubmit,\n        clearTextOnFocus = _this$props6.clearTextOnFocus,\n        onChangeText = _this$props6.onChangeText,\n        onLayout = _this$props6.onLayout,\n        onSelectionChange = _this$props6.onSelectionChange,\n        onSubmitEditing = _this$props6.onSubmitEditing,\n        selection = _this$props6.selection,\n        selectTextOnFocus = _this$props6.selectTextOnFocus,\n        spellCheck = _this$props6.spellCheck,\n        accessibilityViewIsModal = _this$props6.accessibilityViewIsModal,\n        allowFontScaling = _this$props6.allowFontScaling,\n        caretHidden = _this$props6.caretHidden,\n        clearButtonMode = _this$props6.clearButtonMode,\n        dataDetectorTypes = _this$props6.dataDetectorTypes,\n        disableFullscreenUI = _this$props6.disableFullscreenUI,\n        enablesReturnKeyAutomatically = _this$props6.enablesReturnKeyAutomatically,\n        hitSlop = _this$props6.hitSlop,\n        inlineImageLeft = _this$props6.inlineImageLeft,\n        inlineImagePadding = _this$props6.inlineImagePadding,\n        inputAccessoryViewID = _this$props6.inputAccessoryViewID,\n        keyboardAppearance = _this$props6.keyboardAppearance,\n        maxFontSizeMultiplier = _this$props6.maxFontSizeMultiplier,\n        needsOffscreenAlphaCompositing = _this$props6.needsOffscreenAlphaCompositing,\n        onAccessibilityTap = _this$props6.onAccessibilityTap,\n        onContentSizeChange = _this$props6.onContentSizeChange,\n        onEndEditing = _this$props6.onEndEditing,\n        onMagicTap = _this$props6.onMagicTap,\n        onScroll = _this$props6.onScroll,\n        removeClippedSubviews = _this$props6.removeClippedSubviews,\n        renderToHardwareTextureAndroid = _this$props6.renderToHardwareTextureAndroid,\n        returnKeyLabel = _this$props6.returnKeyLabel,\n        scrollEnabled = _this$props6.scrollEnabled,\n        selectionColor = _this$props6.selectionColor,\n        selectionState = _this$props6.selectionState,\n        shouldRasterizeIOS = _this$props6.shouldRasterizeIOS,\n        textBreakStrategy = _this$props6.textBreakStrategy,\n        textContentType = _this$props6.textContentType,\n        underlineColorAndroid = _this$props6.underlineColorAndroid,\n        otherProps = _objectWithoutPropertiesLoose(_this$props6, [\"autoComplete\", \"autoCorrect\", \"editable\", \"keyboardType\", \"multiline\", \"numberOfLines\", \"returnKeyType\", \"secureTextEntry\", \"blurOnSubmit\", \"clearTextOnFocus\", \"onChangeText\", \"onLayout\", \"onSelectionChange\", \"onSubmitEditing\", \"selection\", \"selectTextOnFocus\", \"spellCheck\", \"accessibilityViewIsModal\", \"allowFontScaling\", \"caretHidden\", \"clearButtonMode\", \"dataDetectorTypes\", \"disableFullscreenUI\", \"enablesReturnKeyAutomatically\", \"hitSlop\", \"inlineImageLeft\", \"inlineImagePadding\", \"inputAccessoryViewID\", \"keyboardAppearance\", \"maxFontSizeMultiplier\", \"needsOffscreenAlphaCompositing\", \"onAccessibilityTap\", \"onContentSizeChange\", \"onEndEditing\", \"onMagicTap\", \"onScroll\", \"removeClippedSubviews\", \"renderToHardwareTextureAndroid\", \"returnKeyLabel\", \"scrollEnabled\", \"selectionColor\", \"selectionState\", \"shouldRasterizeIOS\", \"textBreakStrategy\", \"textContentType\", \"underlineColorAndroid\"]);\n\n    var type;\n\n    switch (keyboardType) {\n      case 'email-address':\n        type = 'email';\n        break;\n\n      case 'number-pad':\n      case 'numeric':\n        type = 'number';\n        break;\n\n      case 'phone-pad':\n        type = 'tel';\n        break;\n\n      case 'search':\n      case 'web-search':\n        type = 'search';\n        break;\n\n      case 'url':\n        type = 'url';\n        break;\n\n      default:\n        type = 'text';\n    }\n\n    if (secureTextEntry) {\n      type = 'password';\n    }\n\n    var component = multiline ? 'textarea' : 'input';\n\n    _extends(otherProps, {\n      autoComplete: autoComplete === 'off' ? 'noop' : autoComplete,\n      autoCorrect: autoCorrect ? 'on' : 'off',\n      classList: [classes.textinput],\n      dir: 'auto',\n      enterkeyhint: returnKeyType,\n      onBlur: normalizeEventHandler(this._handleBlur),\n      onChange: normalizeEventHandler(this._handleChange),\n      onFocus: normalizeEventHandler(this._handleFocus),\n      onKeyDown: this._handleKeyDown,\n      onKeyPress: this._handleKeyPress,\n      onSelect: normalizeEventHandler(this._handleSelectionChange),\n      readOnly: !editable,\n      ref: this._setNode,\n      spellCheck: spellCheck != null ? spellCheck : autoCorrect\n    });\n\n    if (multiline) {\n      otherProps.rows = numberOfLines;\n    } else {\n      otherProps.type = type;\n    }\n\n    return createElement(component, otherProps);\n  };\n\n  return TextInput;\n}(Component);\n\nTextInput.displayName = 'TextInput';\nTextInput.defaultProps = {\n  autoCapitalize: 'sentences',\n  autoComplete: 'on',\n  autoCorrect: true,\n  editable: true,\n  keyboardType: 'default',\n  multiline: false,\n  numberOfLines: 1,\n  secureTextEntry: false\n};\nTextInput.State = TextInputState;\nTextInput.propTypes = process.env.NODE_ENV !== \"production\" ? _objectSpread({}, ViewPropTypes, {\n  autoCapitalize: oneOf(['characters', 'none', 'sentences', 'words']),\n  autoComplete: string,\n  autoCorrect: bool,\n  autoFocus: bool,\n  blurOnSubmit: bool,\n  clearTextOnFocus: bool,\n  defaultValue: string,\n  editable: bool,\n  inputAccessoryViewID: string,\n  keyboardType: oneOf(['default', 'email-address', 'number-pad', 'numbers-and-punctuation', 'numeric', 'phone-pad', 'search', 'url', 'web-search']),\n  maxFontSizeMultiplier: number,\n  maxLength: number,\n  multiline: bool,\n  numberOfLines: number,\n  onBlur: func,\n  onChange: func,\n  onChangeText: func,\n  onFocus: func,\n  onKeyPress: func,\n  onSelectionChange: func,\n  onSubmitEditing: func,\n  placeholder: string,\n  placeholderTextColor: ColorPropType,\n  returnKeyType: oneOf(['enter', 'done', 'go', 'next', 'previous', 'search', 'send']),\n  secureTextEntry: bool,\n  selectTextOnFocus: bool,\n  selection: shape({\n    start: number.isRequired,\n    end: number\n  }),\n  spellCheck: bool,\n  style: StyleSheetPropType(TextInputStylePropTypes),\n  value: string,\n  caretHidden: bool,\n  clearButtonMode: string,\n  dataDetectorTypes: string,\n  disableFullscreenUI: bool,\n  enablesReturnKeyAutomatically: bool,\n  keyboardAppearance: string,\n  inlineImageLeft: string,\n  inlineImagePadding: number,\n  onContentSizeChange: func,\n  onEndEditing: func,\n  onScroll: func,\n  returnKeyLabel: string,\n  selectionColor: ColorPropType,\n  selectionState: any,\n  textBreakStrategy: string,\n  underlineColorAndroid: ColorPropType\n}) : {};\nvar classes = css.create({\n  textinput: {\n    MozAppearance: 'textfield',\n    WebkitAppearance: 'none',\n    backgroundColor: 'transparent',\n    border: '0 solid black',\n    borderRadius: 0,\n    boxSizing: 'border-box',\n    font: '14px System',\n    padding: 0,\n    resize: 'none'\n  }\n});\nexport default applyLayout(applyNativeMethods(TextInput));","map":{"version":3,"names":["_objectSpread","target","i","arguments","length","source","ownKeys","Object","keys","getOwnPropertySymbols","concat","filter","sym","getOwnPropertyDescriptor","enumerable","forEach","key","_defineProperty","obj","value","defineProperty","configurable","writable","_objectWithoutPropertiesLoose","excluded","sourceKeys","indexOf","_inheritsLoose","subClass","superClass","prototype","create","constructor","__proto__","applyLayout","applyNativeMethods","canUseDOM","Component","ColorPropType","createElement","css","findNodeHandle","StyleSheetPropType","TextInputStylePropTypes","TextInputState","ViewPropTypes","any","bool","func","number","oneOf","shape","string","isAndroid","test","navigator","userAgent","emptyObject","normalizeEventHandler","handler","e","nativeEvent","text","isSelectionStale","node","selection","selectionEnd","selectionStart","start","end","setSelection","setTimeout","setSelectionRange","TextInput","_Component","_this","_len","args","Array","_key","call","apply","_handleBlur","onBlur","props","_currentlyFocusedNode","_handleContentSizeChange","_this$props","onContentSizeChange","multiline","newHeight","_node","scrollHeight","newWidth","scrollWidth","_nodeHeight","_nodeWidth","contentSize","height","width","_handleChange","_this$props2","onChange","onChangeText","_handleSelectionChange","_handleFocus","_this$props3","clearTextOnFocus","onFocus","selectTextOnFocus","clear","select","_handleKeyDown","stopPropagation","metaKey","_handleKeyPress","_this$props4","blurOnSubmit","onKeyPress","onSubmitEditing","blurOnSubmitDefault","shouldBlurOnSubmit","keyValue","altKey","ctrlKey","shiftKey","isDefaultPrevented","preventDefault","blur","_this$props5","onSelectionChange","_this$props5$selectio","_setNode","component","_proto","isFocused","currentlyFocusedField","componentDidMount","document","activeElement","componentDidUpdate","render","_this$props6","autoComplete","autoCorrect","editable","keyboardType","numberOfLines","returnKeyType","secureTextEntry","onLayout","spellCheck","accessibilityViewIsModal","allowFontScaling","caretHidden","clearButtonMode","dataDetectorTypes","disableFullscreenUI","enablesReturnKeyAutomatically","hitSlop","inlineImageLeft","inlineImagePadding","inputAccessoryViewID","keyboardAppearance","maxFontSizeMultiplier","needsOffscreenAlphaCompositing","onAccessibilityTap","onEndEditing","onMagicTap","onScroll","removeClippedSubviews","renderToHardwareTextureAndroid","returnKeyLabel","scrollEnabled","selectionColor","selectionState","shouldRasterizeIOS","textBreakStrategy","textContentType","underlineColorAndroid","otherProps","type","classList","classes","textinput","dir","enterkeyhint","onKeyDown","onSelect","readOnly","ref","rows","displayName","defaultProps","autoCapitalize","State","propTypes","process","env","NODE_ENV","autoFocus","defaultValue","maxLength","placeholder","placeholderTextColor","isRequired","style","MozAppearance","WebkitAppearance","backgroundColor","border","borderRadius","boxSizing","font","padding","resize"],"sources":["/Users/marcusherrera/Documents/Code/Projects/DoneWithIt/node_modules/react-native-web/dist/exports/TextInput/index.js"],"sourcesContent":["function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\n/**\n * Copyright (c) Nicolas Gallagher.\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport applyLayout from '../../modules/applyLayout';\nimport applyNativeMethods from '../../modules/applyNativeMethods';\nimport { canUseDOM } from 'fbjs/lib/ExecutionEnvironment';\nimport { Component } from 'react';\nimport ColorPropType from '../ColorPropType';\nimport createElement from '../createElement';\nimport css from '../StyleSheet/css';\nimport findNodeHandle from '../findNodeHandle';\nimport StyleSheetPropType from '../../modules/StyleSheetPropType';\nimport TextInputStylePropTypes from './TextInputStylePropTypes';\nimport TextInputState from '../../modules/TextInputState';\nimport ViewPropTypes from '../ViewPropTypes';\nimport { any, bool, func, number, oneOf, shape, string } from 'prop-types';\nvar isAndroid = canUseDOM && /Android/i.test(navigator && navigator.userAgent);\nvar emptyObject = {};\n/**\n * React Native events differ from W3C events.\n */\n\nvar normalizeEventHandler = function normalizeEventHandler(handler) {\n  return function (e) {\n    if (handler) {\n      e.nativeEvent.text = e.target.value;\n      return handler(e);\n    }\n  };\n};\n/**\n * Determines whether a 'selection' prop differs from a node's existing\n * selection state.\n */\n\n\nvar isSelectionStale = function isSelectionStale(node, selection) {\n  if (node && selection) {\n    var selectionEnd = node.selectionEnd,\n        selectionStart = node.selectionStart;\n    var start = selection.start,\n        end = selection.end;\n    return start !== selectionStart || end !== selectionEnd;\n  }\n\n  return false;\n};\n/**\n * Certain input types do no support 'selectSelectionRange' and will throw an\n * error.\n */\n\n\nvar setSelection = function setSelection(node, selection) {\n  try {\n    if (isSelectionStale(node, selection)) {\n      var start = selection.start,\n          end = selection.end; // workaround for Blink on Android: see https://github.com/text-mask/text-mask/issues/300\n\n      if (isAndroid) {\n        setTimeout(function () {\n          return node.setSelectionRange(start, end || start);\n        }, 10);\n      } else {\n        node.setSelectionRange(start, end || start);\n      }\n    }\n  } catch (e) {}\n};\n\nvar TextInput =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(TextInput, _Component);\n\n  function TextInput() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _Component.call.apply(_Component, [this].concat(args)) || this;\n\n    _this._handleBlur = function (e) {\n      var onBlur = _this.props.onBlur;\n      TextInputState._currentlyFocusedNode = null;\n\n      if (onBlur) {\n        onBlur(e);\n      }\n    };\n\n    _this._handleContentSizeChange = function () {\n      var _this$props = _this.props,\n          onContentSizeChange = _this$props.onContentSizeChange,\n          multiline = _this$props.multiline;\n\n      if (multiline && onContentSizeChange) {\n        var newHeight = _this._node.scrollHeight;\n        var newWidth = _this._node.scrollWidth;\n\n        if (newHeight !== _this._nodeHeight || newWidth !== _this._nodeWidth) {\n          _this._nodeHeight = newHeight;\n          _this._nodeWidth = newWidth;\n          onContentSizeChange({\n            nativeEvent: {\n              contentSize: {\n                height: _this._nodeHeight,\n                width: _this._nodeWidth\n              }\n            }\n          });\n        }\n      }\n    };\n\n    _this._handleChange = function (e) {\n      var _this$props2 = _this.props,\n          onChange = _this$props2.onChange,\n          onChangeText = _this$props2.onChangeText;\n      var text = e.nativeEvent.text;\n\n      _this._handleContentSizeChange();\n\n      if (onChange) {\n        onChange(e);\n      }\n\n      if (onChangeText) {\n        onChangeText(text);\n      }\n\n      _this._handleSelectionChange(e);\n    };\n\n    _this._handleFocus = function (e) {\n      var _this$props3 = _this.props,\n          clearTextOnFocus = _this$props3.clearTextOnFocus,\n          onFocus = _this$props3.onFocus,\n          selectTextOnFocus = _this$props3.selectTextOnFocus;\n      var node = _this._node;\n      TextInputState._currentlyFocusedNode = _this._node;\n\n      if (onFocus) {\n        onFocus(e);\n      }\n\n      if (clearTextOnFocus) {\n        _this.clear();\n      }\n\n      if (selectTextOnFocus) {\n        node && node.select();\n      }\n    };\n\n    _this._handleKeyDown = function (e) {\n      // Prevent key events bubbling (see #612)\n      e.stopPropagation(); // Backspace, Escape, Tab, Cmd+Enter, and Arrow keys only fire 'keydown'\n      // DOM events\n\n      if (e.key === 'ArrowLeft' || e.key === 'ArrowUp' || e.key === 'ArrowRight' || e.key === 'ArrowDown' || e.key === 'Backspace' || e.key === 'Escape' || e.key === 'Enter' && e.metaKey || e.key === 'Tab') {\n        _this._handleKeyPress(e);\n      }\n    };\n\n    _this._handleKeyPress = function (e) {\n      var _this$props4 = _this.props,\n          blurOnSubmit = _this$props4.blurOnSubmit,\n          multiline = _this$props4.multiline,\n          onKeyPress = _this$props4.onKeyPress,\n          onSubmitEditing = _this$props4.onSubmitEditing;\n      var blurOnSubmitDefault = !multiline;\n      var shouldBlurOnSubmit = blurOnSubmit == null ? blurOnSubmitDefault : blurOnSubmit;\n\n      if (onKeyPress) {\n        var keyValue = e.key;\n\n        if (keyValue) {\n          e.nativeEvent = {\n            altKey: e.altKey,\n            ctrlKey: e.ctrlKey,\n            key: keyValue,\n            metaKey: e.metaKey,\n            shiftKey: e.shiftKey,\n            target: e.target\n          };\n          onKeyPress(e);\n        }\n      }\n\n      if (!e.isDefaultPrevented() && e.key === 'Enter' && !e.shiftKey) {\n        if ((blurOnSubmit || !multiline) && onSubmitEditing) {\n          // prevent \"Enter\" from inserting a newline\n          e.preventDefault();\n          e.nativeEvent = {\n            target: e.target,\n            text: e.target.value\n          };\n          onSubmitEditing(e);\n        }\n\n        if (shouldBlurOnSubmit) {\n          // $FlowFixMe\n          _this.blur();\n        }\n      }\n    };\n\n    _this._handleSelectionChange = function (e) {\n      var _this$props5 = _this.props,\n          onSelectionChange = _this$props5.onSelectionChange,\n          _this$props5$selectio = _this$props5.selection,\n          selection = _this$props5$selectio === void 0 ? emptyObject : _this$props5$selectio;\n\n      if (onSelectionChange) {\n        try {\n          var node = e.target;\n\n          if (isSelectionStale(node, selection)) {\n            var selectionStart = node.selectionStart,\n                selectionEnd = node.selectionEnd;\n            e.nativeEvent.selection = {\n              start: selectionStart,\n              end: selectionEnd\n            };\n            onSelectionChange(e);\n          }\n        } catch (e) {}\n      }\n    };\n\n    _this._setNode = function (component) {\n      _this._node = findNodeHandle(component);\n\n      if (_this._node) {\n        _this._handleContentSizeChange();\n      }\n    };\n\n    return _this;\n  }\n\n  var _proto = TextInput.prototype;\n\n  _proto.clear = function clear() {\n    this._node.value = '';\n  };\n\n  _proto.isFocused = function isFocused() {\n    return TextInputState.currentlyFocusedField() === this._node;\n  };\n\n  _proto.componentDidMount = function componentDidMount() {\n    setSelection(this._node, this.props.selection);\n\n    if (document.activeElement === this._node) {\n      TextInputState._currentlyFocusedNode = this._node;\n    }\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate() {\n    setSelection(this._node, this.props.selection);\n  };\n\n  _proto.render = function render() {\n    var _this$props6 = this.props,\n        autoComplete = _this$props6.autoComplete,\n        autoCorrect = _this$props6.autoCorrect,\n        editable = _this$props6.editable,\n        keyboardType = _this$props6.keyboardType,\n        multiline = _this$props6.multiline,\n        numberOfLines = _this$props6.numberOfLines,\n        returnKeyType = _this$props6.returnKeyType,\n        secureTextEntry = _this$props6.secureTextEntry,\n        blurOnSubmit = _this$props6.blurOnSubmit,\n        clearTextOnFocus = _this$props6.clearTextOnFocus,\n        onChangeText = _this$props6.onChangeText,\n        onLayout = _this$props6.onLayout,\n        onSelectionChange = _this$props6.onSelectionChange,\n        onSubmitEditing = _this$props6.onSubmitEditing,\n        selection = _this$props6.selection,\n        selectTextOnFocus = _this$props6.selectTextOnFocus,\n        spellCheck = _this$props6.spellCheck,\n        accessibilityViewIsModal = _this$props6.accessibilityViewIsModal,\n        allowFontScaling = _this$props6.allowFontScaling,\n        caretHidden = _this$props6.caretHidden,\n        clearButtonMode = _this$props6.clearButtonMode,\n        dataDetectorTypes = _this$props6.dataDetectorTypes,\n        disableFullscreenUI = _this$props6.disableFullscreenUI,\n        enablesReturnKeyAutomatically = _this$props6.enablesReturnKeyAutomatically,\n        hitSlop = _this$props6.hitSlop,\n        inlineImageLeft = _this$props6.inlineImageLeft,\n        inlineImagePadding = _this$props6.inlineImagePadding,\n        inputAccessoryViewID = _this$props6.inputAccessoryViewID,\n        keyboardAppearance = _this$props6.keyboardAppearance,\n        maxFontSizeMultiplier = _this$props6.maxFontSizeMultiplier,\n        needsOffscreenAlphaCompositing = _this$props6.needsOffscreenAlphaCompositing,\n        onAccessibilityTap = _this$props6.onAccessibilityTap,\n        onContentSizeChange = _this$props6.onContentSizeChange,\n        onEndEditing = _this$props6.onEndEditing,\n        onMagicTap = _this$props6.onMagicTap,\n        onScroll = _this$props6.onScroll,\n        removeClippedSubviews = _this$props6.removeClippedSubviews,\n        renderToHardwareTextureAndroid = _this$props6.renderToHardwareTextureAndroid,\n        returnKeyLabel = _this$props6.returnKeyLabel,\n        scrollEnabled = _this$props6.scrollEnabled,\n        selectionColor = _this$props6.selectionColor,\n        selectionState = _this$props6.selectionState,\n        shouldRasterizeIOS = _this$props6.shouldRasterizeIOS,\n        textBreakStrategy = _this$props6.textBreakStrategy,\n        textContentType = _this$props6.textContentType,\n        underlineColorAndroid = _this$props6.underlineColorAndroid,\n        otherProps = _objectWithoutPropertiesLoose(_this$props6, [\"autoComplete\", \"autoCorrect\", \"editable\", \"keyboardType\", \"multiline\", \"numberOfLines\", \"returnKeyType\", \"secureTextEntry\", \"blurOnSubmit\", \"clearTextOnFocus\", \"onChangeText\", \"onLayout\", \"onSelectionChange\", \"onSubmitEditing\", \"selection\", \"selectTextOnFocus\", \"spellCheck\", \"accessibilityViewIsModal\", \"allowFontScaling\", \"caretHidden\", \"clearButtonMode\", \"dataDetectorTypes\", \"disableFullscreenUI\", \"enablesReturnKeyAutomatically\", \"hitSlop\", \"inlineImageLeft\", \"inlineImagePadding\", \"inputAccessoryViewID\", \"keyboardAppearance\", \"maxFontSizeMultiplier\", \"needsOffscreenAlphaCompositing\", \"onAccessibilityTap\", \"onContentSizeChange\", \"onEndEditing\", \"onMagicTap\", \"onScroll\", \"removeClippedSubviews\", \"renderToHardwareTextureAndroid\", \"returnKeyLabel\", \"scrollEnabled\", \"selectionColor\", \"selectionState\", \"shouldRasterizeIOS\", \"textBreakStrategy\", \"textContentType\", \"underlineColorAndroid\"]);\n\n    var type;\n\n    switch (keyboardType) {\n      case 'email-address':\n        type = 'email';\n        break;\n\n      case 'number-pad':\n      case 'numeric':\n        type = 'number';\n        break;\n\n      case 'phone-pad':\n        type = 'tel';\n        break;\n\n      case 'search':\n      case 'web-search':\n        type = 'search';\n        break;\n\n      case 'url':\n        type = 'url';\n        break;\n\n      default:\n        type = 'text';\n    }\n\n    if (secureTextEntry) {\n      type = 'password';\n    }\n\n    var component = multiline ? 'textarea' : 'input';\n    Object.assign(otherProps, {\n      // Browser's treat autocomplete \"off\" as \"on\"\n      // https://bugs.chromium.org/p/chromium/issues/detail?id=468153#c164\n      autoComplete: autoComplete === 'off' ? 'noop' : autoComplete,\n      autoCorrect: autoCorrect ? 'on' : 'off',\n      classList: [classes.textinput],\n      dir: 'auto',\n      enterkeyhint: returnKeyType,\n      onBlur: normalizeEventHandler(this._handleBlur),\n      onChange: normalizeEventHandler(this._handleChange),\n      onFocus: normalizeEventHandler(this._handleFocus),\n      onKeyDown: this._handleKeyDown,\n      onKeyPress: this._handleKeyPress,\n      onSelect: normalizeEventHandler(this._handleSelectionChange),\n      readOnly: !editable,\n      ref: this._setNode,\n      spellCheck: spellCheck != null ? spellCheck : autoCorrect\n    });\n\n    if (multiline) {\n      otherProps.rows = numberOfLines;\n    } else {\n      otherProps.type = type;\n    }\n\n    return createElement(component, otherProps);\n  };\n\n  return TextInput;\n}(Component);\n\nTextInput.displayName = 'TextInput';\nTextInput.defaultProps = {\n  autoCapitalize: 'sentences',\n  autoComplete: 'on',\n  autoCorrect: true,\n  editable: true,\n  keyboardType: 'default',\n  multiline: false,\n  numberOfLines: 1,\n  secureTextEntry: false\n};\nTextInput.State = TextInputState;\nTextInput.propTypes = process.env.NODE_ENV !== \"production\" ? _objectSpread({}, ViewPropTypes, {\n  autoCapitalize: oneOf(['characters', 'none', 'sentences', 'words']),\n  autoComplete: string,\n  autoCorrect: bool,\n  autoFocus: bool,\n  blurOnSubmit: bool,\n  clearTextOnFocus: bool,\n  defaultValue: string,\n  editable: bool,\n  inputAccessoryViewID: string,\n  keyboardType: oneOf(['default', 'email-address', 'number-pad', 'numbers-and-punctuation', 'numeric', 'phone-pad', 'search', 'url', 'web-search']),\n  maxFontSizeMultiplier: number,\n  maxLength: number,\n  multiline: bool,\n  numberOfLines: number,\n  onBlur: func,\n  onChange: func,\n  onChangeText: func,\n  onFocus: func,\n  onKeyPress: func,\n  onSelectionChange: func,\n  onSubmitEditing: func,\n  placeholder: string,\n  placeholderTextColor: ColorPropType,\n  returnKeyType: oneOf(['enter', 'done', 'go', 'next', 'previous', 'search', 'send']),\n  secureTextEntry: bool,\n  selectTextOnFocus: bool,\n  selection: shape({\n    start: number.isRequired,\n    end: number\n  }),\n  spellCheck: bool,\n  style: StyleSheetPropType(TextInputStylePropTypes),\n  value: string,\n\n  /* react-native compat */\n\n  /* eslint-disable */\n  caretHidden: bool,\n  clearButtonMode: string,\n  dataDetectorTypes: string,\n  disableFullscreenUI: bool,\n  enablesReturnKeyAutomatically: bool,\n  keyboardAppearance: string,\n  inlineImageLeft: string,\n  inlineImagePadding: number,\n  onContentSizeChange: func,\n  onEndEditing: func,\n  onScroll: func,\n  returnKeyLabel: string,\n  selectionColor: ColorPropType,\n  selectionState: any,\n  textBreakStrategy: string,\n  underlineColorAndroid: ColorPropType\n  /* eslint-enable */\n\n}) : {};\nvar classes = css.create({\n  textinput: {\n    MozAppearance: 'textfield',\n    WebkitAppearance: 'none',\n    backgroundColor: 'transparent',\n    border: '0 solid black',\n    borderRadius: 0,\n    boxSizing: 'border-box',\n    font: '14px System',\n    padding: 0,\n    resize: 'none'\n  }\n});\nexport default applyLayout(applyNativeMethods(TextInput));"],"mappings":"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"},"metadata":{},"sourceType":"module"}