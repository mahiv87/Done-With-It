{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport { AppOwnership, UserInterfaceIdiom } from \"./Constants.types\";\nimport ExponentConstants from \"./ExponentConstants\";\nexport { AppOwnership, UserInterfaceIdiom };\n\nif (!ExponentConstants) {\n  console.warn(\"No native ExponentConstants module found, are you sure the expo-constants's module is linked properly?\");\n}\n\nvar manifest = null;\n\nif (ExponentConstants && ExponentConstants.manifest) {\n  manifest = ExponentConstants.manifest;\n\n  if (typeof manifest === 'string') {\n    manifest = JSON.parse(manifest);\n  }\n}\n\nvar _ref = ExponentConstants || {},\n    name = _ref.name,\n    constants = _objectWithoutProperties(_ref, [\"name\"]);\n\nexport default _objectSpread(_objectSpread({}, constants), {}, {\n  manifest: manifest,\n  deviceId: constants.installationId,\n  linkingUrl: constants.linkingUri\n});","map":{"version":3,"mappings":";;;;;;;AAAA,SAEEA,YAFF,EAMEC,kBANF;AASA,OAAOC,iBAAP;AAEA,SACEF,YADF,EAEEC,kBAFF;;AAUA,IAAI,CAACC,iBAAL,EAAwB;EACtBC,OAAO,CAACC,IAAR,CACE,wGADF;AAGD;;AAGD,IAAIC,QAAQ,GAAG,IAAf;;AACA,IAAIH,iBAAiB,IAAIA,iBAAiB,CAACG,QAA3C,EAAqD;EACnDA,QAAQ,GAAGH,iBAAiB,CAACG,QAA7B;;EACA,IAAI,OAAOA,QAAP,KAAoB,QAAxB,EAAkC;IAChCA,QAAQ,GAAGC,IAAI,CAACC,KAAL,CAAWF,QAAX,CAAX;EACD;AACF;;AAED,WAAgCH,iBAAiB,IAAI,EAArD;AAAA,IAAQM,IAAR,QAAQA,IAAR;AAAA,IAAiBC,SAAjB;;AAOA,+CACKA,SADL;EAEEJ,QAAQ,EAARA,QAFF;EAIEK,QAAQ,EAAED,SAAS,CAACE,cAJtB;EAKEC,UAAU,EAAEH,SAAS,CAACI;AALxB","names":["AppOwnership","UserInterfaceIdiom","ExponentConstants","console","warn","manifest","JSON","parse","name","constants","deviceId","installationId","linkingUrl","linkingUri"],"sourceRoot":"","sources":["../src/Constants.ts"],"sourcesContent":["import {\n  AndroidManifest,\n  AppOwnership,\n  IOSManifest,\n  PlatformManifest,\n  NativeConstants,\n  UserInterfaceIdiom,\n  WebManifest,\n} from './Constants.types';\nimport ExponentConstants from './ExponentConstants';\n\nexport {\n  AppOwnership,\n  UserInterfaceIdiom,\n  PlatformManifest,\n  NativeConstants,\n  IOSManifest,\n  AndroidManifest,\n  WebManifest,\n};\n\nif (!ExponentConstants) {\n  console.warn(\n    \"No native ExponentConstants module found, are you sure the expo-constants's module is linked properly?\"\n  );\n}\n\n// On Android we pass the manifest in JSON form so this step is necessary\nlet manifest = null;\nif (ExponentConstants && ExponentConstants.manifest) {\n  manifest = ExponentConstants.manifest;\n  if (typeof manifest === 'string') {\n    manifest = JSON.parse(manifest);\n  }\n}\n\nconst { name, ...constants } = (ExponentConstants || {}) as any;\n\nexport interface Constants extends NativeConstants {\n  deviceId?: string;\n  linkingUrl?: string;\n}\n\nexport default {\n  ...constants,\n  manifest,\n  // Legacy aliases\n  deviceId: constants.installationId,\n  linkingUrl: constants.linkingUri,\n} as Constants;\n"]},"metadata":{},"sourceType":"module"}