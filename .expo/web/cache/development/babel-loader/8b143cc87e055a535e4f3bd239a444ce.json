{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { canUseDOM } from 'fbjs/lib/ExecutionEnvironment';\nimport uuidv4 from 'uuid/v4';\nvar ID_KEY = 'EXPO_CONSTANTS_INSTALLATION_ID';\n\nvar _sessionId = uuidv4();\n\nfunction getBrowserName() {\n  if (canUseDOM) {\n    var agent = navigator.userAgent.toLowerCase();\n\n    if (agent.includes('edge')) {\n      return 'Edge';\n    } else if (agent.includes('edg')) {\n      return 'Chromium Edge';\n    } else if (agent.includes('opr') && !!window['opr']) {\n      return 'Opera';\n    } else if (agent.includes('chrome') && !!window['chrome']) {\n      return 'Chrome';\n    } else if (agent.includes('trident')) {\n      return 'IE';\n    } else if (agent.includes('firefox')) {\n      return 'Firefox';\n    } else if (agent.includes('safari')) {\n      return 'Safari';\n    }\n  }\n\n  return undefined;\n}\n\nexport default {\n  get name() {\n    return 'ExponentConstants';\n  },\n\n  get appOwnership() {\n    return 'expo';\n  },\n\n  get installationId() {\n    var installationId;\n\n    try {\n      installationId = localStorage.getItem(ID_KEY);\n\n      if (installationId == null || typeof installationId !== 'string') {\n        installationId = uuidv4();\n        localStorage.setItem(ID_KEY, installationId);\n      }\n    } catch (error) {\n      installationId = _sessionId;\n    } finally {\n      return installationId;\n    }\n  },\n\n  get sessionId() {\n    return _sessionId;\n  },\n\n  get platform() {\n    return {\n      web: canUseDOM ? {\n        ua: navigator.userAgent\n      } : undefined\n    };\n  },\n\n  get isHeadless() {\n    return false;\n  },\n\n  get isDevice() {\n    return true;\n  },\n\n  get isDetached() {\n    return false;\n  },\n\n  get expoVersion() {\n    return this.manifest.sdkVersion || null;\n  },\n\n  get linkingUri() {\n    if (canUseDOM) {\n      return location.origin + location.pathname;\n    } else {\n      return '';\n    }\n  },\n\n  get expoRuntimeVersion() {\n    return this.expoVersion;\n  },\n\n  get deviceName() {\n    return getBrowserName();\n  },\n\n  get nativeAppVersion() {\n    return null;\n  },\n\n  get nativeBuildVersion() {\n    return null;\n  },\n\n  get systemFonts() {\n    return [];\n  },\n\n  get statusBarHeight() {\n    return 0;\n  },\n\n  get deviceYearClass() {\n    return null;\n  },\n\n  get manifest() {\n    return process.env.APP_MANIFEST || {};\n  },\n\n  get experienceUrl() {\n    if (canUseDOM) {\n      return location.origin + location.pathname;\n    } else {\n      return '';\n    }\n  },\n\n  get debugMode() {\n    return __DEV__;\n  },\n\n  getWebViewUserAgentAsync: function getWebViewUserAgentAsync() {\n    return _regeneratorRuntime.async(function getWebViewUserAgentAsync$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          if (!canUseDOM) {\n            _context.next = 4;\n            break;\n          }\n\n          return _context.abrupt(\"return\", navigator.userAgent);\n\n        case 4:\n          return _context.abrupt(\"return\", null);\n\n        case 5:\n        case \"end\":\n          return _context.stop();\n      }\n    }, null, null, null, Promise);\n  }\n};","map":{"version":3,"mappings":"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","names":["canUseDOM","uuidv4","ID_KEY","_sessionId","getBrowserName","agent","navigator","userAgent","toLowerCase","includes","window","undefined","name","appOwnership","installationId","localStorage","getItem","setItem","error","sessionId","platform","web","ua","isHeadless","isDevice","isDetached","expoVersion","manifest","sdkVersion","linkingUri","location","origin","pathname","expoRuntimeVersion","deviceName","nativeAppVersion","nativeBuildVersion","systemFonts","statusBarHeight","deviceYearClass","process","env","APP_MANIFEST","experienceUrl","debugMode","__DEV__","getWebViewUserAgentAsync"],"sourceRoot":"","sources":["../src/ExponentConstants.web.ts"],"sourcesContent":["import { canUseDOM } from 'fbjs/lib/ExecutionEnvironment';\nimport uuidv4 from 'uuid/v4';\n\nimport { NativeConstants, PlatformManifest, WebManifest } from './Constants.types';\n\nconst ID_KEY = 'EXPO_CONSTANTS_INSTALLATION_ID';\n\ndeclare var __DEV__: boolean;\ndeclare var process: { env: any };\ndeclare var navigator: Navigator;\ndeclare var location: Location;\ndeclare var localStorage: Storage;\n\nconst _sessionId = uuidv4();\n\nfunction getBrowserName(): string | undefined {\n  if (canUseDOM) {\n    const agent = navigator.userAgent.toLowerCase();\n    if (agent.includes('edge')) {\n      return 'Edge';\n    } else if (agent.includes('edg')) {\n      return 'Chromium Edge';\n    } else if (agent.includes('opr') && !!window['opr']) {\n      return 'Opera';\n    } else if (agent.includes('chrome') && !!window['chrome']) {\n      return 'Chrome';\n    } else if (agent.includes('trident')) {\n      return 'IE';\n    } else if (agent.includes('firefox')) {\n      return 'Firefox';\n    } else if (agent.includes('safari')) {\n      return 'Safari';\n    }\n  }\n\n  return undefined;\n}\n\nexport default {\n  get name(): string {\n    return 'ExponentConstants';\n  },\n  get appOwnership(): 'expo' {\n    return 'expo';\n  },\n  get installationId(): string {\n    let installationId;\n    try {\n      installationId = localStorage.getItem(ID_KEY);\n      if (installationId == null || typeof installationId !== 'string') {\n        installationId = uuidv4();\n        localStorage.setItem(ID_KEY, installationId as string);\n      }\n    } catch (error) {\n      installationId = _sessionId;\n    } finally {\n      return installationId;\n    }\n  },\n  get sessionId(): string {\n    return _sessionId;\n  },\n  get platform(): PlatformManifest {\n    return { web: canUseDOM ? { ua: navigator.userAgent } : undefined };\n  },\n  get isHeadless(): false {\n    return false;\n  },\n  get isDevice(): true {\n    // TODO: Bacon: Possibly want to add information regarding simulators\n    return true;\n  },\n  get isDetached(): false {\n    return false;\n  },\n  get expoVersion(): string | null {\n    return this.manifest.sdkVersion || null;\n  },\n  get linkingUri(): string {\n    if (canUseDOM) {\n      // On native this is `exp://`\n      return location.origin + location.pathname;\n    } else {\n      return '';\n    }\n  },\n  get expoRuntimeVersion(): string | null {\n    return this.expoVersion;\n  },\n  get deviceName(): string | undefined {\n    return getBrowserName();\n  },\n  get nativeAppVersion(): null {\n    return null;\n  },\n  get nativeBuildVersion(): null {\n    return null;\n  },\n  get systemFonts(): string[] {\n    // TODO: Bacon: Maybe possible.\n    return [];\n  },\n  get statusBarHeight(): number {\n    return 0;\n  },\n  get deviceYearClass(): number | null {\n    // TODO: Bacon: The android version isn't very accurate either, maybe we could try and guess this value.\n    return null;\n  },\n  get manifest(): WebManifest {\n    // This is defined by @expo/webpack-config.\n    // If your site is bundled with a different config then you may not have access to the app.json automatically.\n    return process.env.APP_MANIFEST || {};\n  },\n  get experienceUrl(): string {\n    if (canUseDOM) {\n      return location.origin + location.pathname;\n    } else {\n      return '';\n    }\n  },\n  get debugMode(): boolean {\n    return __DEV__;\n  },\n  async getWebViewUserAgentAsync(): Promise<string | null> {\n    if (canUseDOM) {\n      return navigator.userAgent;\n    } else {\n      return null;\n    }\n  },\n} as NativeConstants;\n"]},"metadata":{},"sourceType":"module"}