{"ast":null,"code":"var accessibilityComponentTypeToRole = {\n  button: 'button',\n  none: 'presentation'\n};\nvar accessibilityTraitsToRole = {\n  adjustable: 'slider',\n  button: 'button',\n  header: 'heading',\n  image: 'img',\n  link: 'link',\n  none: 'presentation',\n  search: 'search',\n  summary: 'region'\n};\nvar accessibilityRoleToWebRole = {\n  adjustable: 'slider',\n  button: 'button',\n  header: 'heading',\n  image: 'img',\n  imagebutton: null,\n  keyboardkey: null,\n  label: null,\n  link: 'link',\n  none: 'presentation',\n  search: 'search',\n  summary: 'region',\n  text: null\n};\n\nvar propsToAriaRole = function propsToAriaRole(_ref) {\n  var accessibilityComponentType = _ref.accessibilityComponentType,\n      accessibilityRole = _ref.accessibilityRole,\n      accessibilityTraits = _ref.accessibilityTraits;\n\n  if (accessibilityRole) {\n    var inferredRole = accessibilityRoleToWebRole[accessibilityRole];\n\n    if (inferredRole !== null) {\n      return inferredRole || accessibilityRole;\n    }\n  }\n\n  if (accessibilityTraits) {\n    var trait = Array.isArray(accessibilityTraits) ? accessibilityTraits[0] : accessibilityTraits;\n    return accessibilityTraitsToRole[trait];\n  }\n\n  if (accessibilityComponentType) {\n    return accessibilityComponentTypeToRole[accessibilityComponentType];\n  }\n};\n\nexport default propsToAriaRole;","map":{"version":3,"names":["accessibilityComponentTypeToRole","button","none","accessibilityTraitsToRole","adjustable","header","image","link","search","summary","accessibilityRoleToWebRole","imagebutton","keyboardkey","label","text","propsToAriaRole","_ref","accessibilityComponentType","accessibilityRole","accessibilityTraits","inferredRole","trait","Array","isArray"],"sources":["/Users/marcusherrera/Documents/Code/Projects/DoneWithIt/node_modules/react-native-web/dist/modules/AccessibilityUtil/propsToAriaRole.js"],"sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nvar accessibilityComponentTypeToRole = {\n  button: 'button',\n  none: 'presentation'\n};\nvar accessibilityTraitsToRole = {\n  adjustable: 'slider',\n  button: 'button',\n  header: 'heading',\n  image: 'img',\n  link: 'link',\n  none: 'presentation',\n  search: 'search',\n  summary: 'region'\n};\nvar accessibilityRoleToWebRole = {\n  adjustable: 'slider',\n  button: 'button',\n  header: 'heading',\n  image: 'img',\n  imagebutton: null,\n  keyboardkey: null,\n  label: null,\n  link: 'link',\n  none: 'presentation',\n  search: 'search',\n  summary: 'region',\n  text: null\n};\n/**\n * Provides compatibility with React Native's \"accessibilityTraits\" (iOS) and\n * \"accessibilityComponentType\" (Android), converting them to equivalent ARIA\n * roles.\n */\n\nvar propsToAriaRole = function propsToAriaRole(_ref) {\n  var accessibilityComponentType = _ref.accessibilityComponentType,\n      accessibilityRole = _ref.accessibilityRole,\n      accessibilityTraits = _ref.accessibilityTraits;\n\n  if (accessibilityRole) {\n    var inferredRole = accessibilityRoleToWebRole[accessibilityRole];\n\n    if (inferredRole !== null) {\n      // ignore roles that don't map to web\n      return inferredRole || accessibilityRole;\n    }\n  }\n\n  if (accessibilityTraits) {\n    var trait = Array.isArray(accessibilityTraits) ? accessibilityTraits[0] : accessibilityTraits;\n    return accessibilityTraitsToRole[trait];\n  }\n\n  if (accessibilityComponentType) {\n    return accessibilityComponentTypeToRole[accessibilityComponentType];\n  }\n};\n\nexport default propsToAriaRole;"],"mappings":"AAQA,IAAIA,gCAAgC,GAAG;EACrCC,MAAM,EAAE,QAD6B;EAErCC,IAAI,EAAE;AAF+B,CAAvC;AAIA,IAAIC,yBAAyB,GAAG;EAC9BC,UAAU,EAAE,QADkB;EAE9BH,MAAM,EAAE,QAFsB;EAG9BI,MAAM,EAAE,SAHsB;EAI9BC,KAAK,EAAE,KAJuB;EAK9BC,IAAI,EAAE,MALwB;EAM9BL,IAAI,EAAE,cANwB;EAO9BM,MAAM,EAAE,QAPsB;EAQ9BC,OAAO,EAAE;AARqB,CAAhC;AAUA,IAAIC,0BAA0B,GAAG;EAC/BN,UAAU,EAAE,QADmB;EAE/BH,MAAM,EAAE,QAFuB;EAG/BI,MAAM,EAAE,SAHuB;EAI/BC,KAAK,EAAE,KAJwB;EAK/BK,WAAW,EAAE,IALkB;EAM/BC,WAAW,EAAE,IANkB;EAO/BC,KAAK,EAAE,IAPwB;EAQ/BN,IAAI,EAAE,MARyB;EAS/BL,IAAI,EAAE,cATyB;EAU/BM,MAAM,EAAE,QAVuB;EAW/BC,OAAO,EAAE,QAXsB;EAY/BK,IAAI,EAAE;AAZyB,CAAjC;;AAoBA,IAAIC,eAAe,GAAG,SAASA,eAAT,CAAyBC,IAAzB,EAA+B;EACnD,IAAIC,0BAA0B,GAAGD,IAAI,CAACC,0BAAtC;EAAA,IACIC,iBAAiB,GAAGF,IAAI,CAACE,iBAD7B;EAAA,IAEIC,mBAAmB,GAAGH,IAAI,CAACG,mBAF/B;;EAIA,IAAID,iBAAJ,EAAuB;IACrB,IAAIE,YAAY,GAAGV,0BAA0B,CAACQ,iBAAD,CAA7C;;IAEA,IAAIE,YAAY,KAAK,IAArB,EAA2B;MAEzB,OAAOA,YAAY,IAAIF,iBAAvB;IACD;EACF;;EAED,IAAIC,mBAAJ,EAAyB;IACvB,IAAIE,KAAK,GAAGC,KAAK,CAACC,OAAN,CAAcJ,mBAAd,IAAqCA,mBAAmB,CAAC,CAAD,CAAxD,GAA8DA,mBAA1E;IACA,OAAOhB,yBAAyB,CAACkB,KAAD,CAAhC;EACD;;EAED,IAAIJ,0BAAJ,EAAgC;IAC9B,OAAOjB,gCAAgC,CAACiB,0BAAD,CAAvC;EACD;AACF,CAtBD;;AAwBA,eAAeF,eAAf"},"metadata":{},"sourceType":"module"}