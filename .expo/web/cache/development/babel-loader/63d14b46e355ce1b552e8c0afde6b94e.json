{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { getRecoveryPropsToSave } from \"./ErroRecoveryStore\";\nimport ExpoErrorRecovery from \"./ExpoErrorRecovery\";\n\nif (Platform.OS !== 'web') {\n  var globalHandler = ErrorUtils.getGlobalHandler();\n  ErrorUtils.setGlobalHandler(function _callee(error, isFatal) {\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          if (!ExpoErrorRecovery.saveRecoveryProps) {\n            _context.next = 3;\n            break;\n          }\n\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(ExpoErrorRecovery.saveRecoveryProps(getRecoveryPropsToSave()));\n\n        case 3:\n          globalHandler(error, isFatal);\n\n        case 4:\n        case \"end\":\n          return _context.stop();\n      }\n    }, null, null, null, Promise);\n  });\n} else {\n  window.addEventListener('error', function () {\n    ExpoErrorRecovery.saveRecoveryProps(getRecoveryPropsToSave());\n  });\n}","map":{"version":3,"mappings":";;AAEA,SAASA,sBAAT;AACA,OAAOC,iBAAP;;AAEA,IAAIC,QAAQ,CAACC,EAAT,KAAgB,KAApB,EAA2B;EACzB,IAAMC,aAAa,GAAGC,UAAU,CAACC,gBAAX,EAAtB;EAGAD,UAAU,CAACE,gBAAX,CAA4B,iBAAOC,KAAP,EAAcC,OAAd;IAAA;MAAA;QAAA;UAAA,KACtBR,iBAAiB,CAACS,iBADI;YAAA;YAAA;UAAA;;UAAA;UAAA,iCAElBT,iBAAiB,CAACS,iBAAlB,CAAoCV,sBAAsB,EAA1D,CAFkB;;QAAA;UAI1BI,aAAa,CAACI,KAAD,EAAQC,OAAR,CAAb;;QAJ0B;QAAA;UAAA;MAAA;IAAA;EAAA,CAA5B;AAMD,CAVD,MAUO;EACLE,MAAM,CAACC,gBAAP,CAAwB,OAAxB,EAAiC,YAAK;IACpCX,iBAAiB,CAACS,iBAAlB,CAAoCV,sBAAsB,EAA1D;EACD,CAFD;AAGD","names":["getRecoveryPropsToSave","ExpoErrorRecovery","Platform","OS","globalHandler","ErrorUtils","getGlobalHandler","setGlobalHandler","error","isFatal","saveRecoveryProps","window","addEventListener"],"sourceRoot":"","sources":["../src/ErrorRecovery.fx.ts"],"sourcesContent":["import { Platform } from 'react-native';\n\nimport { getRecoveryPropsToSave } from './ErroRecoveryStore';\nimport ExpoErrorRecovery from './ExpoErrorRecovery';\n\nif (Platform.OS !== 'web') {\n  const globalHandler = ErrorUtils.getGlobalHandler();\n  // ErrorUtils came from react-native\n  // https://github.com/facebook/react-native/blob/1151c096dab17e5d9a6ac05b61aacecd4305f3db/Libraries/vendor/core/ErrorUtils.js#L25\n  ErrorUtils.setGlobalHandler(async (error, isFatal) => {\n    if (ExpoErrorRecovery.saveRecoveryProps) {\n      await ExpoErrorRecovery.saveRecoveryProps(getRecoveryPropsToSave());\n    }\n    globalHandler(error, isFatal);\n  });\n} else {\n  window.addEventListener('error', () => {\n    ExpoErrorRecovery.saveRecoveryProps(getRecoveryPropsToSave());\n  });\n}\n"]},"metadata":{},"sourceType":"module"}